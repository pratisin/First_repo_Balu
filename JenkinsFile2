def artifactname = "133testing-app.jar"
def repoName = "rome-rp1-app-repo"
def pipelineName = "balu_scripted_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "rome-rp1-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "rome-rp1-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build &1') {
           steps {
              
              //sh 'mvn -B -DskipTests clean compile'
			sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
       stage('Test &2') {
           steps {
              
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }


      stage('Artifacts&Packages &4') {
                 steps {
                    
                    echo 'Deploying the change....'
                    snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
          			snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
 
                    //snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}-PATCH","semanticVersion": "1.${env.BUILD_NUMBER}.0-PATCH","repositoryName": "${repoName}"}],"branchName":"master"}""")
           			//snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}-PATCH", "repositoryName": "${repoName}"}], "branchName":"master"}""")
                    
                 }
      }
      stage('CodeCoverage &5') {
                 steps {
                    
                    echo 'sonar summaries....'
                    sonarSummaries()                    
                 }
      }
      stage('Deploy &3') {
      	
                 steps {
                    
                    echo 'Deploying the change....'
                    snDevOpsChange(ignoreErrors:false)
 
                    //snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           			//snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
                    
                 }
      }   

 }
 
}

def sonarSummaries() {

   withSonarQubeEnv('Sonar_Cloud') {
       //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
   sh '${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=sunilyerubandi_DemoMavenProject -Dsonar.organization=sunilyerubandi -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=8f73ecadbe478e324214c741569315dddfa01ee5 -Dsonar.java.binaries=target/ -Dsonar.branch.name=master'
   
	}
	
   // withSonarQubeEnv('sonarQube_local') {
     //  	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		// sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
	//}
	
} // end of def sonarsummaries
